alert("hello");

"some"+"text";  (concatination)

typeof( ) => display the type. eg:typeof(5); =>integer

"hello" +5; => "hello" + "5" => hello5 (type coercion or auto type conversion)
 
"$" + 20.95 + 7.99 => $20.957.99

"$" + (20.95 + 7.99) =>28.939999999999998

"$" + ((20.95*100 + 7.99*100)/100) =>28.94

"item (" + (1+1) + "): $ " +  (20.95*100 + 7.99*100)/100  => item (2): $ 28.94

alert("item (" + (1+1) + "): $ " +  (20.95*100 + 7.99*100)/100);

=========ways to create a strings =============

`  ` (Template Strings.By the Interpolation feature we can insert values directly into a string.multi-line Strings)
' '
" " (it is useful when we have a single quate in a string eg: "I'm learning java-script")


========================================================

escape charecter ( \ + any charecter eg: 'I\'m learing java-script')

\n =>new line of text (does not create the charecter n)

`Items(${1 + 1}) : $ ${ (20.95*100 + 7.99*100)/100}`


================Exercises==================================

3A) 'My name is :'
3B) 'Praveen varma'
3C) 'My name is :' + 'Praveen varma'
3D)'Total cost : $' + (1*5+1*3)
3E) `Total cost : $ ${1*5+1*3}`
3F) alert(`Total cost : $ ${1*5+1*3}`);
3G) 'Total cost : $' + ((1*(5.99*100)+1*(2.95*100))/100)
3H) `Total cost : $ ${(1*(5.99*100)+1*(2.95*100))/100}`
3I) alert(`Total cost : $ ${(1*(5.99*100)+1*(2.95*100))/100}`);
3J) alert(`Total cost : $ ${(1*(5.99*100)+1*(2.95*100))/100}
      Thanks you, come again!`);
3K) `Items ${2+2} :$  ${(2*(20.95*100)+2*(7.99*100))/100}`
3L) `Shipping & handling : $  ${(4.99*100+4.99*100)/100}`
3M) `Total before tax : $ ${(2*(20.95*100)+2*(7.99*100)+(4.99*100)+(4.99*100))/100}`
3N) `Estimated tax(10%) : $ ${((2*(20.95*100)+2*(7.99*100)+(4.99*100)+(4.99*100))+Math.round((10/100)*(2*(20.95*100)+2*(7.99*100)+(4.99*100)+(4.99*100))))/100}`
